name: Build and Deploy to Cloud Run

on:
  push:
    branches:
      - main
  workflow_dispatch:

env:
  GCP_PROJECT_ID: klaviyo-ct-plugin # TODO: update Google Cloud project id
  GAR_LOCATION: us-central1 # TODO: update Artifact Registry location
  REPOSITORY: dev-docker-repo # TODO: update Artifact Registry repository name
  SERVICE: dev-klaviyo-ct-plugin # TODO: update Cloud Run service name
  REGION: us-central1 # TODO: update Cloud Run service region

jobs:
  deploy:
    # Add 'id-token' with the intended permissions for workload identity federation
    permissions:
      contents: 'read'
      id-token: 'write'

    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v3

      - name: Google Auth
        id: auth
        uses: 'google-github-actions/auth@v0'
        with:
          credentials_json: '${{ secrets.GCP_CREDENTIALS }}'
      # BEGIN - Docker auth and build (NOTE: If you already have a container image, these Docker steps can be omitted)

      # Authenticate Docker to Google Cloud Artifact Registry
      - name: Docker Auth to Google Artifact Registry
        id: docker-auth
        uses: 'docker/login-action@v2'
        with:
          registry: '${{ env.GAR_LOCATION }}-docker.pkg.dev'
          username: _json_key
          password: ${{ secrets.GCP_CREDENTIALS }}

      # NOTE: Alternative option - authentication via credentials json
      # - name: Docker Auth
      # id: docker-auth
      # uses: 'docker/login-action@v1'
      # with:
      #   registry: ${{ env.GAR_LOCATION }}-docker.pkg.dev
      #   username: _json_key
      #   password: ${{ secrets.GCP_CREDENTIALS }}

      - name: Build and Push Container
        run: |-
          docker build -t "${{ env.GAR_LOCATION }}-docker.pkg.dev/${{ env.GCP_PROJECT_ID }}/${{ env.REPOSITORY }}/${{ env.SERVICE }}:${{ github.sha }}" ./
          docker push "${{ env.GAR_LOCATION }}-docker.pkg.dev/${{ env.GCP_PROJECT_ID }}/${{ env.REPOSITORY }}/${{ env.SERVICE }}:${{ github.sha }}"
      - name: Run Trivy vulnerability scanner
        uses: aquasecurity/trivy-action@master
        with:
          image-ref: "${{ env.GAR_LOCATION }}-docker.pkg.dev/${{ env.GCP_PROJECT_ID }}/${{ env.REPOSITORY }}/${{ env.SERVICE }}:${{ github.sha }}"
          format: 'table'
          exit-code: '1'
          ignore-unfixed: true
          vuln-type: 'os,library'
          severity: 'CRITICAL,HIGH'

      - name: Deploy to Cloud Run
        id: deploy
        uses: google-github-actions/deploy-cloudrun@v1
        with:
          service: ${{ env.SERVICE }}
          region: ${{ env.REGION }}
          image: ${{ env.GAR_LOCATION }}-docker.pkg.dev/${{ env.GCP_PROJECT_ID }}/${{ env.REPOSITORY }}/${{ env.SERVICE }}:${{ github.sha }}
          flags: '--port 6789'
          env_vars: |
            CT_API_URL=${{ vars.CT_API_URL }}
            CT_AUTH_URL=${{ vars.CT_AUTH_URL }}
            CT_PROJECT_ID=${{ vars.CT_PROJECT_ID }}
            CT_SCOPE=${{ vars.CT_SCOPE }}
          secrets: |
            KLAVIYO_AUTH_KEY=klaviyo_auth_key:latest
            CT_API_CLIENT=commercetools_api_client:latest
      - name: Show Output
        run: echo ${{ steps.deploy.outputs.url }}
